#!/usr/bin/env ansible-playbook
---
- hosts: undercloud
  become: no
  name: Creating the stack deployment for autoscaling
  tasks:

    - name: Create the stack
      shell: |
        source ~/overcloudrc;
        openstack stack create \
        -t $HOME/templates/autoscaling/vnf/template.yaml \
        -e $HOME/templates/autoscaling/vnf/resources.yaml \
        vnf;
      register: result
      failed_when: result.rc >= 1

    - name: Verify that the stack was created successfully
      shell: |
        source ~/overcloudrc;
        openstack stack show vnf -c id -c stack_status;
      register: result
      failed_when: '"CREATE_COMPLETE" not in result.stdout'

    - name: Verify that the stack resources are created
      shell: |
        source ~/overcloudrc;
        export STACK_ID=$(openstack stack show vnf -c id -f value);
        openstack stack resource list $STACK_ID;
      register: result1
      failed_when: '"CREATE_COMPLETE" not in result1.stdout'

    - name: Verify that an instance was launched by the stack creation
      shell: |
        source ~/overcloudrc;
        export STACK_ID=$(openstack stack show vnf -c id -f value);
        openstack server list --long | grep $STACK_ID;
      register: result
      failed_when: result.rc >= 1

    - name: Verify that the alarms were created for the stack
      shell: |
        source ~/overcloudrc;
        export STACK_ID=$(openstack stack show vnf -c id -f value);
        openstack alarm list
      register: result2
      failed_when: result1.rc == result2.rc

    - name: Verify that metric resources exist for the stack
      shell: |
        source ~/overcloudrc;
        export STACK_ID=$(openstack stack show vnf -c id -f value);
        openstack metric resource search \
        --sort-column launched_at -c id \
        -c display_name -c launched_at \
        -c deleted_at --type instance \
        server_group="$STACK_ID"
      register: result
      failed_when: result.rc >= 1

    - name: Verify that measurements exist for the instance resources created through the stack
      shell: |
        source ~/overcloudrc;
        export STACK_ID=$(openstack stack show vnf -c id -f value);
        openstack metric aggregates \
        --resource-type instance --sort-column timestamp '(metric cpu rate:mean)' \
        server_group="$STACK_ID"
      register: result
      failed_when: result.rc >= 1
